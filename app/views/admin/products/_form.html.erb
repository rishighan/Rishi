<%= nested_form_for([:admin,@product], :remote=>true, :html => { :multipart => true }) do |f| %>
<% if @product.errors.any? %>
<div id="error_explanation">
	<h2><%= pluralize(@product.errors.count, "error") %> prohibited this product from being saved:</h2>
	<ul>
		<% @product.errors.full_messages.each do |msg| %>
		<li>
			<%= msg %>
		</li>
		<% end %>
	</ul>
</div>
<% end %>
<div class="field">
	<%= f.label :title %>
	<br />
	<%= f.text_field :title %>
</div>
<div class="field">
	<%= f.label :product_category_id %>
	<br/>
	<!-- form object, in this case, product, and then the parameters required to build the  <select> </select> -->
	<!-- the nested field model, in this case, ProductCategory , the id, product_category_id and the value, product_category_title	-->
	<%= collection_select(:product, :product_category_id, ProductCategory.all, :id, :productCategory_title, :prompt => true) %>
</div>

<%= f.file_field :productshot%>

<div class="field">
	<%= f.label :description %>
	<br />
	<%= f.text_area :description %>
</div>
<div class="field">
	<%= f.label :price %>
	<br />
	<%= f.text_field :price %>
</div>
<div class="actions">
	<%= f.submit %>
</div>
<% end %> 